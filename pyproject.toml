# Copyright Â© 2025 Leviftas authors. All rights reserved.
#
# Licensed under the GNU General Public License v3.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.gnu.org/licenses/gpl-3.0.html
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# pyproject.toml
#
# Project configuration and build system setup for Leviftas SDK.
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
#
# - Author   : FrostLeo <frostleo.dev@gmail.com>
# - Created  : 2025/10/16
# - Modified : 2025/10/16

# Build system configuration - declares build backend and dependencies
[build-system]
requires = [
    "setuptools>=80.9.0",
]
build-backend = "setuptools.build_meta"

# Project configuration - defines basic metadata and dependencies
[project]
name = "leviftas"
dynamic = [
    "version",
]
description = "A distributed and modular SDK for centralized data platforms, built on Django REST Framework."
readme = {file = "README.md", content-type = "text/markdown"}
license = "GPL-3.0-or-later"
license-files = [
    "LICEN[CS]E*",
]
authors = [
    {name = "Frost Leo", email = "frostleo.dev@gmail.com"},
]
maintainers = [
    {name = "Frost Leo", email = "frostleo.dev@gmail.com"},
]
keywords = [
    "leviftas",
    "data platform",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]
requires-python = ">=3.13"
dependencies = [
    "typing_extensions>=4.15.0",
]

# Executable scripts - command-line tools installed with the package
# TODO: Add CLI commands when implemented
# [project.scripts]
# leviftas = "leviftas.cli:main"

# Optional dependencies
[project.optional-dependencies]
test = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "pytest-timeout>=2.4.0",
]

# Project URLs
[project.urls]
Homepage = "https://frost-leo.github.io/Leviftas/"
Documentation = "https://github.com/Frost-Leo/Leviftas/wiki"
Repository = "https://github.com/Frost-Leo/Leviftas"
Issues = "https://github.com/Frost-Leo/Leviftas/issues"

# Setuptools-specific configuration
[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools.package-dir]
"" = "src"

# Dynamic metadata
[tool.setuptools.dynamic]
version = {attr = "leviftas.__version__"}

# Testing configuration options
[tool.pytest.ini_options]
testpaths = "tests"
xfail_strict = true
pythonpath = [
    "src",
]
addopts = [
    # Only overwrite the src/leviftas directory and exclude the test files
    "--cov=src/leviftas",
    # Detailed mode, displaying each test node
    "-v",
    # Short backtracking information
    "--tb=short",
    # Strict marking mode
    "--strict-markers",
    # Generate coverage report in HTML format
    "--cov-report=html",
    # Display coverage report in terminal
    "--cov-report=term",
    # Show uncovered line numbers
    "--cov-report=term-missing",
    # Branch coverage
    "--cov-branch",
]
markers = [
    "internal: Internal system class-related tests",
]

# Coverage configuration options
[tool.coverage.run]
source = ["src/leviftas"]
branch = true
relative_files = true
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@overload",
    "@typing.overload",
    "typing.assert_never",
    "assert_never",
]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"